{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    return res.json();\n  }).then(res => {\n    return res;\n  });\n};\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    localStorage.setItem('jwt', data.token);\n    console.log(data);\n    return data;\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","authorize","identifier","response","data","localStorage","setItem","token","console","log","checkToken"],"sources":["C:/Users/79093/desktop/dev/mestoauth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\" \r\n        },\r\n        body: JSON.stringify({ \r\n            email, password })\r\n    })\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n};\r\n\r\nexport const authorize = (identifier, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ identifier, password })\r\n    })\r\n        .then((response => response.json()))\r\n        .then((data) => {\r\n            localStorage.setItem('jwt', data.token)\r\n            console.log(data);\r\n            return data;\r\n        })\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,KAAK;MAAEC;IAAS,CAAC;EACzB,CAAC,CAAC,CACGO,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG,CAACC,IAAI,EAAE;EACrB,CAAC,CAAC,CACDF,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG;EACd,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAME,SAAS,GAAGA,CAACC,UAAU,EAAEX,QAAQ,KAAK;EAC/C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEK,UAAU;MAAEX;IAAS,CAAC;EACjD,CAAC,CAAC,CACGO,IAAI,CAAEK,QAAQ,IAAIA,QAAQ,CAACH,IAAI,EAAE,CAAE,CACnCF,IAAI,CAAEM,IAAI,IAAK;IACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,IAAI,CAACG,KAAK,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjB,OAAOA,IAAI;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIH,KAAK,IAAK;EACjC,OAAOf,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACjCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASa,KAAM;IACrC;EACJ,CAAC,CAAC,CACGT,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACM,IAAI,IAAIA,IAAI,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}