{"ast":null,"code":"import { apiConfig } from \"./utils\";\nexport const api = new Api(apiConfig);\nclass Api {\n  constructor(config) {\n    this._handleResponse = res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error('Ошибка'));\n    };\n    this.url = config.baseUrl;\n    this.headers = config.headers;\n  }\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n  changeProfile(data) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.profession\n      })\n    }).then(this._handleResponse);\n  }\n  createNewCard(data) {\n    return fetch(`${this.url}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n  changeProfileAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n}","map":{"version":3,"names":["apiConfig","api","Api","constructor","config","_handleResponse","res","ok","json","Promise","reject","Error","url","baseUrl","headers","getUserInfo","fetch","then","getInitialCards","changeProfile","data","method","body","JSON","stringify","name","about","profession","createNewCard","link","deleteCard","cardId","addLike","deleteLike","changeProfileAvatar","avatar"],"sources":["C:/Users/79093/desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import { apiConfig } from \"./utils\";\r\n\r\nexport const api = new Api(apiConfig);\r\n\r\nclass Api {\r\n    constructor(config) {\r\n      this.url = config.baseUrl;\r\n      this.headers = config.headers;\r\n    }\r\n\r\n    _handleResponse = (res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(new Error('Ошибка'))\r\n    }\r\n\r\n    getUserInfo() {\r\n      return fetch(`${this.url}/users/me`, {\r\n        headers: this.headers\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n  \r\n    getInitialCards() {\r\n      return fetch(`${this.url}/cards`, {\r\n        headers: this.headers\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    changeProfile(data) {\r\n      return fetch(`${this.url}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          about: data.profession\r\n        })\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    createNewCard(data) {\r\n      return fetch(`${this.url}/cards`, {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          link: data.link\r\n        })\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n      return fetch(`${this.url}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    addLike(cardId) {\r\n      return fetch(`${this.url}/cards/${cardId}/likes`, {\r\n        method: 'PUT',\r\n        headers: this.headers,\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n      return fetch(`${this.url}/cards/${cardId}/likes`, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n\r\n    changeProfileAvatar(data) {\r\n      return fetch(`${this.url}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: data.avatar\r\n        })\r\n      })\r\n      .then(this._handleResponse)\r\n    }\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}