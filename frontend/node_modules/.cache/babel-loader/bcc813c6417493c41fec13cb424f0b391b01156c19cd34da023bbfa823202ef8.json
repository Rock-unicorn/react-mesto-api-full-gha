{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co/';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return res.json();\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    localStorage.setItem('jwt', data.token);\n    return data;\n  }).catch(err => {\n    return err;\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","console","log","authorize","identifier","response","data","localStorage","setItem","token","checkToken"],"sources":["C:/Users/79093/desktop/dev/mestoauth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co/'\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ password, email })\r\n    })\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = (identifier, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ identifier, password })\r\n    })\r\n        .then((response => response.json()))\r\n        .then((data) => {\r\n            localStorage.setItem('jwt', data.token)\r\n            \r\n            return data;\r\n        })\r\n        .catch(err => { return err})\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n    .catch(err => console.log(err))\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gCAAgC;AAExD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG,CAACC,IAAI,EAAE;EACrB,CAAC,CAAC,CACDF,IAAI,CAAEC,GAAG,IAAK;IACX,OAAOA,GAAG;EACd,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAACC,UAAU,EAAEhB,QAAQ,KAAK;EAC/C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAES,UAAU;MAAEhB;IAAS,CAAC;EACjD,CAAC,CAAC,CACGQ,IAAI,CAAES,QAAQ,IAAIA,QAAQ,CAACP,IAAI,EAAE,CAAE,CACnCF,IAAI,CAAEU,IAAI,IAAK;IACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,IAAI,CAACG,KAAK,CAAC;IAEvC,OAAOH,IAAI;EACf,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAA,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,MAAMU,UAAU,GAAID,KAAK,IAAK;EACjC,OAAOnB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACjCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASiB,KAAM;IACrC;EACJ,CAAC,CAAC,CACDb,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACU,IAAI,IAAIA,IAAI,CAAC,CAClBP,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}