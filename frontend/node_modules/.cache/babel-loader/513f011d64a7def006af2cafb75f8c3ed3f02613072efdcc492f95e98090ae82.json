{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(new Error('Ошибка'));\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(handleResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(handleResponse).then(data => {\n    localStorage.setItem('jwt', data.token);\n    return data;\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => {\n    return data;\n  });\n};","map":{"version":3,"names":["BASE_URL","handleResponse","res","ok","json","Promise","reject","Error","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","data","localStorage","setItem","token","checkToken"],"sources":["C:/Users/79093/desktop/dev/mestoauth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nfunction handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('Ошибка'))\r\n  }\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    })\r\n        .then(handleResponse)\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    })\r\n        .then(handleResponse)\r\n        .then((data) => {\r\n            localStorage.setItem('jwt', data.token)\r\n            return data;\r\n        })\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then((data) => {return data})\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,cAAcA,CAACC,GAAG,EAAE;EACzB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC5C;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBN,QAAQ,EAAEA,QAAQ;MAClBD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CACGQ,IAAI,CAAChB,cAAc,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBN,QAAQ,EAAEA,QAAQ;MAClBD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC,CAAC,CACGQ,IAAI,CAAChB,cAAc,CAAC,CACpBgB,IAAI,CAAEE,IAAI,IAAK;IACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,IAAI,CAACG,KAAK,CAAC;IACvC,OAAOH,IAAI;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMI,UAAU,GAAID,KAAK,IAAK;EACjC,OAAOX,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACjCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASS,KAAM;IACrC;EACJ,CAAC,CAAC,CACGL,IAAI,CAACf,GAAG,IAAIA,GAAG,CAACE,IAAI,EAAE,CAAC,CACvBa,IAAI,CAAEE,IAAI,IAAK;IAAC,OAAOA,IAAI;EAAA,CAAC,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}